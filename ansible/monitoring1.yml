- name: Deploy Open5GS, Prometheus, and Grafana on MicroK8s with Persistence
  hosts: localhost
  gather_facts: no
  tasks:
    
    # Ensure the "monitoring" namespace exists   
    - name: Create monitoring namespace
      shell: |
        microk8s kubectl create namespace monitoring --dry-run=client -o yaml | microk8s kubectl apply -f -
      changed_when: false

    # Create persistent storage directories for Grafana
    - name: Create persistent storage directories for Grafana
      file:
        path: "/var/lib/microk8s/grafana-data"
        state: directory
        mode: '0755'
        owner: root
        group: root
      become: yes

    # Apply Grafana storage configurations
    - name: Apply Grafana storage configurations
      command: microk8s kubectl apply -f /vagrant/configs/monitoring/grafana_storage.yaml
      changed_when: false

    # Add and update Prometheus Helm repo
    - name: Add Prometheus Helm chart repo
      command: microk8s helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
      register: helm_add_prometheus_repo
      failed_when: helm_add_prometheus_repo.rc != 0
      changed_when: "'has been added' in helm_add_prometheus_repo.stdout"

    - name: Update Prometheus Helm repo
      command: microk8s helm repo update
      when: helm_add_prometheus_repo.changed
      changed_when: false

    # Install Prometheus WITHOUT Persistence
    - name: Install Prometheus (without persistence)
      command: >
        microk8s helm upgrade --install prometheus prometheus-community/prometheus 
        --create-namespace 
        --namespace monitoring 
        --values /vagrant/configs/monitoring/prometheus_values.yaml
        --set server.persistentVolume.enabled=false
        --set alertmanager.persistentVolume.enabled=false
      changed_when: false
      failed_when: false

    # Add and update Grafana Helm repo
    - name: Add Grafana Helm chart repo
      command: microk8s helm repo add grafana https://grafana.github.io/helm-charts
      register: helm_add_grafana_repo
      failed_when: helm_add_grafana_repo.rc != 0
      changed_when: "'has been added' in helm_add_grafana_repo.stdout"

    - name: Update Grafana Helm repo
      command: microk8s helm repo update
      when: helm_add_grafana_repo.changed
      changed_when: false

    # Install Grafana WITH Persistence
    - name: Install Grafana with persistence
      command: >
        microk8s helm upgrade --install grafana grafana/grafana 
        --create-namespace 
        --namespace monitoring 
        --values /vagrant/configs/monitoring/grafana_values.yaml
        --set persistence.enabled=true
        --set persistence.existingClaim=grafana-data
      changed_when: false
      failed_when: false

    # Wait for Grafana pod to be ready
    - name: Wait for Grafana pod to be ready
      command: >
        microk8s kubectl wait --namespace monitoring 
        --for=condition=ready pod 
        --selector=app.kubernetes.io/name=grafana 
        --timeout=300s
      changed_when: false

    # Retrieve and store Grafana admin password
    - name: Retrieve Grafana admin password
      shell: microk8s kubectl get secret -n monitoring grafana -o jsonpath="{.data.admin-password}" | base64 --decode
      register: grafana_admin_password
      changed_when: false

    - name: Show Grafana Admin Password
      debug:
        msg: "Grafana Admin Password: {{ grafana_admin_password.stdout }}"

    - name: Save Grafana Admin Password to a file
      copy:
        content: "{{ grafana_admin_password.stdout }}"
        dest: "/vagrant/grafana_admin_password.txt"
        mode: '0600'
      become: yes

    # Create Systemd Service for Port Forwarding
    - name: Create systemd service files for port forwarding
      copy:
        dest: "/etc/systemd/system/{{ item.name }}.service"
        content: |
          [Unit]
          Description={{ item.desc }}
          After=network.target microk8s.service
          
          [Service]
          Type=simple
          ExecStartPre=/bin/bash -c 'until microk8s kubectl get pods -n monitoring -l "{{ item.selector }}" -o jsonpath="{.items[*].status.phase}" | grep -q "Running"; do sleep 5; done'
          ExecStart=/bin/bash -c 'POD=$(microk8s kubectl get pods -n monitoring -l "{{ item.selector }}" -o name | head -n1); microk8s kubectl port-forward $POD {{ item.port }}:{{ item.port }} --address 0.0.0.0 -n monitoring'
          Restart=on-failure
          RestartSec=10
          
          [Install]
          WantedBy=multi-user.target
        mode: '0644'
      loop:
        - { name: 'grafana-port-forward', desc: 'Port forward for Grafana', selector: 'app.kubernetes.io/name=grafana', port: '3000' }
        - { name: 'prometheus-port-forward', desc: 'Port forward for Prometheus', selector: 'app.kubernetes.io/name=prometheus', port: '9090' }
      become: yes


    # Enable and start port forwarding services
    - name: Enable and start port forwarding services
      systemd:
        name: "{{ item }}"
        enabled: yes
        state: restarted
        daemon_reload: yes
      loop:
        - grafana-port-forward
        - prometheus-port-forward
      become: yes

    # Ensure that Prometheus is running
    - name: Wait for Prometheus service to be up
      wait_for:
        host: 0.0.0.0
        port: 9090
        timeout: 300

    # Ensure Grafana is running
    - name: Wait for Grafana service to be up
      wait_for:
        host: 0.0.0.0
        port: 3000
        timeout: 300
